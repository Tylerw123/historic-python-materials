Title: python-dev Summary for 2003-12-01 through 2003-12-31
Sitemap-ignore: yes

<div class="document" id="python-dev-summary-for-2003-12-01-through-2003-12-31">
<h1 class="title">python-dev Summary for 2003-12-01 through 2003-12-31</h1>
<p>This is a summary of traffic on the <a class="reference" href="http://mail.python.org/mailman/listinfo/python-dev">python-dev mailing list</a> from December 1, 2003 through December 31, 2003.  It is intended to inform the wider Python community of on-going developments on the list.  To comment on anything mentioned here, just post to <a class="reference" href="http://groups.google.com/groups?q=comp.lang.python">comp.lang.python</a> (or email <a class="reference" href="mailto:python-list&#64;python.org">python-list&#64;python.org</a> which is a gateway to the newsgroup) with a subject line mentioning what you are discussing. All python-dev members are interested in seeing ideas discussed by the community, so don't hesitate to take a stance on something.  And if all of this really interests you then get involved and join <a class="reference" href="http://www.python.org/dev/">python-dev</a>!</p>
<p>This is the thirty-first and -second summaries written by Brett Cannon (a friend of a friend actually reads this thing!  Hi, Elle).</p>
<p>To contact me, please send email to brett at python.org ; I do not have the time to keep up on comp.lang.python and thus do not always catch follow-ups posted there.</p>
<p>All summaries are archived at <a class="reference" href="http://www.python.org/dev/summary/">http://www.python.org/dev/summary/</a> .</p>
<p>Please note that this summary is written using <a class="reference" href="http://docutils.sf.net/rst.html">reStructuredText</a> which can be found at <a class="reference" href="http://docutils.sf.net/rst.html">http://docutils.sf.net/rst.html</a> .  Any unfamiliar punctuation is probably markup for <a class="reference" href="http://docutils.sf.net/rst.html">reST</a> (otherwise it is probably regular expression syntax or a typo =); you can safely ignore it, although I suggest learning reST; it's simple and is accepted for <a class="reference" href="http://www.python.org/dev/peps/pep-0012">PEP markup</a> and gives some perks for the HTML output.  Also, because of the wonders of programs that like to reformat text, I cannot guarantee you will be able to run the text version of this summary through <a class="reference" href="http://docutils.sf.net/">Docutils</a> as-is unless it is from the original text file.</p>
<p>The in-development version of the documentation for Python can be found at <a class="reference" href="http://www.python.org/dev/doc/devel/">http://www.python.org/dev/doc/devel/</a> and should be used when looking up any documentation on something mentioned here.  PEPs (Python Enhancement Proposals) are located at <a class="reference" href="http://www.python.org/dev/peps/">http://www.python.org/dev/peps/</a> .  To view files in the Python CVS online, go to <a class="reference" href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/">http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/</a> .  Reported bugs and suggested patches can be found at the <a class="reference" href="http://sourceforge.net/tracker/?group_id=5470">SourceForge</a> project page.</p>
<p>The <a class="reference" href="http://python.org/psf/">Python Software Foundation</a> is the non-profit organization that holds the intellectual property for Python.  It also tries to forward the development and use of Python.  But the PSF cannot do this without donations.  You can make a donation at <a class="reference" href="http://python.org/psf/donations/">http://python.org/psf/donations/</a> .  Every penny helps so even a small donation (you can donate through PayPal or by check) helps.</p>
<div class="contents topic" id="contents">
<p class="topic-title"><a name="contents">Contents</a></p>
<ul class="simple">
<li><a class="reference" href="#summary-announcements" id="id1" name="id1">Summary Announcements</a></li>
<li><a class="reference" href="#summaries" id="id2" name="id2">Summaries</a><ul>
<li><a class="reference" href="#released-to-the-masses" id="id3" name="id3">2.3.3 released to the masses</a></li>
<li><a class="reference" href="#pie-thon-competition-work-ramps-up" id="id4" name="id4">Pie-thon competition work ramps up</a></li>
<li><a class="reference" href="#pycon-is-a-go" id="id5" name="id5">PyCon is a go!</a></li>
<li><a class="reference" href="#operator-gains-attrgetter-and-itemgetter" id="id6" name="id6">operator gains attrgetter and itemgetter</a></li>
<li><a class="reference" href="#cobjects-and-safety" id="id7" name="id7">CObjects and safety</a></li>
<li><a class="reference" href="#unicode-is-a-pain" id="id8" name="id8">Unicode is a pain</a></li>
<li><a class="reference" href="#two-new-developers" id="id9" name="id9">Two new developers</a></li>
<li><a class="reference" href="#compiling-2-4-under-net" id="id10" name="id10">Compiling 2.4 under .NET</a></li>
<li><a class="reference" href="#new-method-flag-meth-coexist" id="id11" name="id11">New method flag: METH_COEXIST</a></li>
<li><a class="reference" href="#better-relative-import-support" id="id12" name="id12">Better relative import support</a></li>
<li><a class="reference" href="#list-sorted-becomes-a-built-in" id="id13" name="id13">list.sorted becomes a built-in</a></li>
<li><a class="reference" href="#what-to-do-with-old-python-code" id="id14" name="id14">What to do with old Python code?</a></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="summary-announcements">
<h1><a class="toc-backref" href="#id1" name="summary-announcements">Summary Announcements</a></h1>
<p>Sorry if this summary comes off as light, but I caught the flu the week of Christmas and it developed into walking pneumonia which I still have.</p>
<p>On a more positive note, PyCon is hitting its stride.  Online registration is available at <a class="reference" href="http://pycon.org/dc2004">http://pycon.org/dc2004</a> and early bird registration ends January 31.  Online talk proposal submission is online at <a class="reference" href="http://submit.pycon.org/">http://submit.pycon.org/</a>  and the deadline is January 15.</p>
</div>
<div class="section" id="summaries">
<h1><a class="toc-backref" href="#id2" name="summaries">Summaries</a></h1>
<div class="section" id="released-to-the-masses">
<h2><a class="toc-backref" href="#id3" name="released-to-the-masses">2.3.3 released to the masses</a></h2>
<p><a class="reference" href="http://python.org/2.3.3/">Python 2.3.3</a> has gone out the door.  Thanks to Anthony Baxter for being release manager (again!) and to all of python-dev and anyone who contributed code for this release.  With this being a bugfix release this supercedes 2.3.2 and thus people should upgrade if possible.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040550.html">2.3.3 cycle</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040852.html">release23-maint branch CLOSED for release</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041004.html">Berkeley support in release23-maint</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040740.html">RELEASED Python 2.3.3 (release candidate 1)</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041167.html">2.3.3 portability audit</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041183.html">2.3.3 and beyond</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041286.html">RELEASED Python 2.3.3 (final)</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041424.html">status of 2.3 branch for maintenance checkins</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="pie-thon-competition-work-ramps-up">
<h2><a class="toc-backref" href="#id4" name="pie-thon-competition-work-ramps-up">Pie-thon competition work ramps up</a></h2>
<p><a class="reference" href="http://www.sidhe.org/~dan/blog/">Dan Sugalski</a>, project leader of the <a class="reference" href="http://www.parrotcode.org/">Parrot</a> VM that will be used for <a class="reference" href="http://dev.perl.org/perl6/">Perl 6</a>, reminded the list that the benchmark to be used for the <a class="reference" href="http://www.sidhe.org/~dan/blog/archives/000219.html">Pie-thon</a> needed to be written since the bytecode for the benchmark needed to be frozen.</p>
<p>So Guido wrote some benchmarks.  They are in CVS under nondist/sandbox/parrotbench .</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040613.html">Merry December</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040963.html">Pie-thon benchmarks</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041527.html">Pie-thon benchmark code ready</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="pycon-is-a-go">
<h2><a class="toc-backref" href="#id5" name="pycon-is-a-go">PyCon is a go!</a></h2>
<p><a class="reference" href="http://www.pycon.org/">http://www.pycon.org/</a> has gone live!  <a class="reference" href="http://www.pycon.org/dc2004">Registration</a> is live (early-bird ends January 31)!  Online talk proposal submission is live (deadline is January 15)!</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040553.html">PyCon DC 2004 - Registration about to open!</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041012.html">PyCon DC 2004 - Submissions Now Open</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="operator-gains-attrgetter-and-itemgetter">
<h2><a class="toc-backref" href="#id6" name="operator-gains-attrgetter-and-itemgetter">operator gains attrgetter and itemgetter</a></h2>
<p>The operator module has now gained two new functions: attrgetter and itemgetter &quot;which are useful for creating fast data extractor functions for map(), list.sort(), itertools.groupby(), and other functions that expect a function argument&quot; according to Misc/NEWS .</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040590.html">Re: &quot;groupby&quot; iterator</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="cobjects-and-safety">
<h2><a class="toc-backref" href="#id7" name="cobjects-and-safety">CObjects and safety</a></h2>
<p>Michael Hudson pointed out how CObjects could be misused in Python code.  Various ideas of how to make them safer by checking that the proper CObject was passed were proposed.  The thread seemed to end without a resolution, though.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040702.html">are CObjects inherently unsafe?</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="unicode-is-a-pain">
<h2><a class="toc-backref" href="#id8" name="unicode-is-a-pain">Unicode is a pain</a></h2>
<p>Want proof?  How about the fact that you can store a character like &quot;√§&quot; either as two characters (&quot;a&quot; followed by &quot;previous character has an umlaut&quot;) or as one (&quot;a with an umlaut&quot;).  The former is called &quot;decomposed normal form&quot; and is used in OS X.  Windows, of course, uses the latter version.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040778.html">test_unicode_file failing on Mac OS X</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="two-new-developers">
<h2><a class="toc-backref" href="#id9" name="two-new-developers">Two new developers</a></h2>
<p>Hye-Shik Chang has become a developer.  You probably know him from his work on the CJK codecs.  He is now an official developer.</p>
<p>Vinay Sajip, implementor of the logging package has also been granted CVS checkin rights.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040808.html">New developer</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="compiling-2-4-under-net">
<h2><a class="toc-backref" href="#id10" name="compiling-2-4-under-net">Compiling 2.4 under .NET</a></h2>
<p>Martin v. Löwis has started sandbox work on an MSI installer and moving Python 2.4 over to VC 7.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040784.html">Py2.4 pre-alpha snapshot</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041451.html">First version of Python MSI available</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041452.html">Switching to VC.NET 2003</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="new-method-flag-meth-coexist">
<h2><a class="toc-backref" href="#id11" name="new-method-flag-meth-coexist">New method flag: METH_COEXIST</a></h2>
<p>Raymond Hettinger, in his continual pursuit of speed, came up with a new method flag, METH_COEXIST, which causes a method to be used in place of a slot wrapper.  The example that actually led to this is __contains__: a PyCFunction defining __contains__ tends to be faster than one in the sq_contains slot thanks to METH_O and other tricks.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040940.html">FW: METH_COEXIST</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="better-relative-import-support">
<h2><a class="toc-backref" href="#id12" name="better-relative-import-support">Better relative import support</a></h2>
<p>There was a huge discussion on a better way to handle relative imports (think of the situation where you have your module <tt class="literal"><span class="pre">import</span> <span class="pre">sys</span></tt> and you happen to have a module named sys in the same directory; should that local module be imported or the sys module from the stdlib?).  Luckily Aahz volunteered to write a PEP on the whole thread so I am being spared from having to summarize the thing.  =)  Thanks, Aahz.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/040973.html">Re: Christmas Wishlist</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041078.html">Re: Python-Dev Digest, Vol 5, Issue 57</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041065.html">Relative import</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041418.html">Another Strategy for Relative Import</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="list-sorted-becomes-a-built-in">
<h2><a class="toc-backref" href="#id13" name="list-sorted-becomes-a-built-in">list.sorted becomes a built-in</a></h2>
<p>Just as the title says, list.sorted has now been moved out of the list type and has been made a built-in.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041129.html">python/dist/src/Python bltinmodule.c,2.304,2.305</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="what-to-do-with-old-python-code">
<h2><a class="toc-backref" href="#id14" name="what-to-do-with-old-python-code">What to do with old Python code?</a></h2>
<p>Someone rewrote the bisect module in C.  This brought up the question of what to do with the old Python version.  Some suggest moving it to the Demo directory.  Others suggest keeping the code but importing the C version in the Python module.  The idea of keeping both was quickly shot down, though, like in the pickle/cPickle situation.</p>
<p>This discussion is still going at this time.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-December/041511.html">SF patch 864863: Bisect C implementation</a></li>
</ul>
</dd>
</dl>
</div>
</div>
</div>
<hr class="footer" />
<div class="footer">
<a class="reference" href="2003-12-01_2003-12-31.txt">View document source</a>.
Generated on: 2004-01-11 04:08 UTC.
Generated by <a class="reference" href="http://docutils.sourceforge.net/">Docutils</a> from <a class="reference" href="http://docutils.sourceforge.net/rst.html">reStructuredText</a> source.
</div>
