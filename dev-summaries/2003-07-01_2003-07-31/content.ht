Title: python-dev Summary for 2003-07-01 through 2003-07-31
Sitemap-ignore: yes

<div class="document" id="python-dev-summary-for-2003-07-01-through-2003-07-31">
<h1 class="title">python-dev Summary for 2003-07-01 through 2003-07-31</h1>
<p>This is a summary of traffic on the <a class="reference" href="http://mail.python.org/mailman/listinfo/python-dev">python-dev mailing list</a> from July 1, 2003 through July 31, 2003.  It is intended to inform the wider Python community of on-going developments on the list and to have some impact or hold interest to the wider Python community.  To comment on anything mentioned here, just post to <a class="reference" href="mailto:python-list&#64;python.org">python-list&#64;python.org</a> or <a class="reference" href="http://groups.google.com/groups?q=comp.lang.python">comp.lang.python</a> with a subject line mentioning what you are discussing. All python-dev members are interested in seeing ideas discussed by the community, so don't hesitate to take a stance on something.  And if all of this really interests you then get involved and join <a class="reference" href="http://www.python.org/dev/">python-dev</a>!</p>
<p>This is the twenty-first/twenty-second summary written by Brett Cannon (who is still learning how to count; gave the wrong summary count last month).</p>
<p>All summaries are archived at <a class="reference" href="http://www.python.org/dev/summary/">http://www.python.org/dev/summary/</a> .</p>
<p>Please note that this summary is written using <a class="reference" href="http://docutils.sf.net/rst.html">reStructuredText</a> which can be found at <a class="reference" href="http://docutils.sf.net/rst.html">http://docutils.sf.net/rst.html</a> .  Any unfamiliar punctuation is probably markup for <a class="reference" href="http://docutils.sf.net/rst.html">reST</a> (otherwise it is probably regular expression syntax or a typo =); you can safely ignore it, although I suggest learning reST; its simple and is accepted for <a class="reference" href="http://www.python.org/dev/peps/pep-0012">PEP markup</a> and gives some perks for the HTML output.  Also, because of the wonders of programs that like to reformat text, I cannot guarantee you will be able to run the text version of this summary through <a class="reference" href="http://docutils.sf.net/">Docutils</a> as-is unless it is from the original text file.</p>
<p>The in-development version of the documentation for Python can be found at <a class="reference" href="http://www.python.org/dev/doc/devel/">http://www.python.org/dev/doc/devel/</a> and should be used when looking up any documentation on something mentioned here.  Python PEPs (Python Enhancement Proposals) are located at <a class="reference" href="http://www.python.org/dev/peps/">http://www.python.org/dev/peps/</a> .  To view files in the Python CVS online, go to <a class="reference" href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/">http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/python/</a> .</p>
<div class="contents topic" id="contents">
<p class="topic-title"><a name="contents">Contents</a></p>
<ul class="simple">
<li><a class="reference" href="#summary-announcements" id="id40" name="id40">Summary Announcements</a></li>
<li><a class="reference" href="#summaries" id="id41" name="id41">Summaries</a><ul>
<li><a class="reference" href="#python-2-3-final-released" id="id42" name="id42">Python 2.3 final released!</a></li>
<li><a class="reference" href="#string-exceptions-going-extinct-eventually" id="id43" name="id43">String Exceptions Going Extinct, Eventually</a></li>
<li><a class="reference" href="#someday-my-cvs-updates-will-succeed-on-the-first-try" id="id44" name="id44">Someday, My CVS updates Will Succeed on the First Try...</a></li>
<li><a class="reference" href="#which-license-to-use" id="id45" name="id45">Which License to Use?</a></li>
<li><a class="reference" href="#not-quite-ansi-c" id="id46" name="id46">Not Quite ANSI C</a></li>
<li><a class="reference" href="#shadowing-built-ins-is-becoming-a-no-no" id="id47" name="id47">Shadowing Built-ins is Becoming a No-No</a></li>
<li><a class="reference" href="#must-start-faster" id="id48" name="id48">Must...Start...Faster...</a></li>
<li><a class="reference" href="#the-world-and-numbers" id="id49" name="id49">The World and Numbers</a></li>
<li><a class="reference" href="#zippin-nothin" id="id50" name="id50">Zippin' Nothin'</a></li>
<li><a class="reference" href="#a-syntax-for-function-attributes" id="id51" name="id51">A Syntax For Function Attributes</a></li>
</ul>
</li>
</ul>
</div>
<div class="section" id="summary-announcements">
<h1><a class="toc-backref" href="#id40" name="summary-announcements">Summary Announcements</a></h1>
<p>It's experimentation time again!  In preparation for having to cut down on the breadth of the summary thanks to my return to school I am starting this summary off as the inaugural release of the new format.  Pretty much everything is going to change somewhat.</p>
<p>First, though, I think I should explain my new viewpoint towards the summaries that I am taking.  In order to continue to provide a certain level of quality and coverage while retaining my personal sanity and to not feel like the Summaries are a job instead of something I do for fun and to help others, I am going to start viewing the Summaries more from a journalistic perspective than a historical one.  Before I felt more like a historian that was summarizing <em>everything</em> that happened on python-dev.  Now, though, I am be more like a journalist, covering only the pertinent ideas.  This also allows me to inject more of my personality into my writing.</p>
<p>But what ramifications does this new perspective cause?  Well, it will dictate what I do and do not summarize.  I plan on several types of discussions to be covered in the Summaries.  One is new features of the language.  This is so people can know about them ASAP and thus comment on them.  Since practically any feature mentioned here is experimental there is a chance to remove it if a community movement mounts.  I will also cover any major thinking on the future of Python.  I have always wished there was an easy way to see what pie-in-the-sky ideas python-dev was thinking of in the back of our collective mind; the summaries might as well fill this desire.  And of course any random discussion that is large, important, and/or complex will continue to be covered.</p>
<p>In terms of formatting and layout, that will also change along with the new viewpoint.  I am planning to follow something more along the lines of the Perl's <a class="reference" href="http://dev.perl.org/perl6/list-summaries/">This Week...</a>; yes, I am taking a cue from Perl but AM Kuchling and Michael Hudson originally used this format as well.  This means titles of summary sections will more reflect the topic being summarized rather than the specific thread(s).  I will continue to list all of the threads that contributed to the summary, though, for reference purposes.  I feel this will be beneficial since I know I have personally looked back into the Summary archives and had a hard time finding something specific since the subject of a thread does not always match the topic of discussion; if I can't find something and I know about what month it happened I can only imagine what everyone else has had to go through to find something!</p>
<p>I am removing the Quickies section from the Summaries.  This section was nice to have, but it just ate away at my time.  This also goes along with the new viewpoint.</p>
<p>I am sure not everyone will be happy with this change, that's fine.  But if someone out there <em>truly</em> hates the direction I am going then they can step forward and take the reigns from me.  But as I have stated before, the fine print on me giving up this post is that the person who takes over must be as thorough as I <em>used</em> to be; I can do the summaries in a half-assed fashion as well as anyone else.</p>
<p>Enough of that topic.  One thing I would like to mention is that the <a class="reference" href="http://www.python.org/psf/">Python Software Foundation</a> can now accept donations through PayPal.  Specifics can be found at <a class="reference" href="http://www.python.org/psf/donations/">http://www.python.org/psf/donations/</a> .  It would be great if people could donate since the PSF is more than just a non-profit to hold the Python intellectual property.  One of the goals of the group is to get enough money to do something like the Perl Foundation does and sponsor someone to hack on Python for a living for a set amount of time.  Right now we are a ways off from having that kind of revenue, but there is no reason why we can't.  Heck, if we can just get enough to sponsor one person to do full-time Python hacking for a week it would be beneficial.  Or better yet, the PSF could sponsor one of their own members to write a summary of the python-dev mailing list for the betterment of the community.  =)</p>
</div>
<div class="section" id="summaries">
<h1><a class="toc-backref" href="#id41" name="summaries">Summaries</a></h1>
<div class="section" id="python-2-3-final-released">
<h2><a class="toc-backref" href="#id42" name="python-2-3-final-released">Python 2.3 final released!</a></h2>
<p>In case for some odd reason you didn't know, Python 2.3 final has gone out the door.  The team managed to meet the goal of getting it out by the end of the month so that <a class="reference" href="http://www.apple.com/">Apple</a> can use a final release instead of a release candidate in OS X 10.3 (a.k.a. Panther).</p>
<p>The goal of this release was to continue to improve Python without adding any new keywords.  This was met while speeding things up, fixing bugs, adding to the standard library, and adding some new built-ins.  To find out what is new or has changed look at the changelog at <a class="reference" href="http://www.python.org/2.3/highlights.html">http://www.python.org/2.3/highlights.html</a> or <a class="reference" href="http://www.python.org/doc/2.3/whatsnew/">What's New in Python 2.3</a>.</p>
<p>As with all software, there are bound to be bugs.  What bugs that are known are listed at <a class="reference" href="http://www.python.org/2.3/bugs.html">http://www.python.org/2.3/bugs.html</a> .  If you find bugs not listed there, please report them on the SourceForge bug tracker at <a class="reference" href="http://sourceforge.net/tracker/?group_id=5470&amp;atid=105470">http://sourceforge.net/tracker/?group_id=5470&amp;atid=105470</a> .  Running the regression test suite (details on how to do this is covered in the documentation for the 'test' package as found at <a class="reference" href="http://www.python.org/doc/current/lib/module-test.html">http://www.python.org/doc/current/lib/module-test.html</a>) is always appreciated.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036669.html">Problem with 2.3b2 tarfile?</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036732.html">MacPython 2.3b2 binary installer for MacOSX</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036762.html">Running tests on freebsd5</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036783.html">Python 2.3 release schedule update</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036845.html">Vacation and possibly a new bug</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036892.html">Doc/ tree closes at noon, US/Eastern</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036899.html">I've tagged the tree</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036900.html">cygwin errors</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037117.html">test_strptime; test_logging; test_time failure</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036921.html">2.3rc1 delayed</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036940.html">Python 2.3 release candidate 1</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036941.html">post-release festivities</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037024.html">New branch for r23c2 work</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037134.html">Serious CallTip Bug in IDLE</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037144.html">MacPython-OS9 test failures</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037193.html">Doc/ tree on trunk closed</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037200.html">Cutting the 2.3c2 tonight 8pm EDT</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037207.html">Re: [Python-checkins] python/dist/src/Misc NEWS,1.826,1.827</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037208.html">RELEASED Python 2.3c2</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037237.html">2.3rc2 IDLE problems on a Win2000sp3 box</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037284.html">Draft: 2.3 download page</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037311.html">Last priority &gt;= 7 bug for Python 2.3</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037315.html">CVS Freeze</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037319.html">RELEASED Python 2.3 (final)</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="string-exceptions-going-extinct-eventually">
<h2><a class="toc-backref" href="#id43" name="string-exceptions-going-extinct-eventually">String Exceptions Going Extinct, Eventually</a></h2>
<p>It has been brought up several times before, but things are now moving along to eventually deprecate string exceptions (e.g., <tt class="literal"><span class="pre">raise</span> <span class="pre">&quot;this</span> <span class="pre">string</span> <span class="pre">exception&quot;</span></tt>).  they have now been removed from the tutorial to prevent people new to the language from picking up habits that will eventually be impossible to perform.</p>
<p>As for when the impending deprecation will occur only Guido knows.  The chances of it coming before Python 3, though, is most likely small.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036665.html">String exceptions in the Tutorial</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="someday-my-cvs-updates-will-succeed-on-the-first-try">
<h2><a class="toc-backref" href="#id44" name="someday-my-cvs-updates-will-succeed-on-the-first-try">Someday, My CVS updates Will Succeed on the First Try...</a></h2>
<p>We all know that <a class="reference" href="http://www.sf.net/">SourceForge</a> does not have the snappiest or most reliable <a class="reference" href="http://www.cvshome.org/">CVS</a> servers in the world; Python 2.3 final's release was targeted a few days earlier than needed for <a class="reference" href="http://www.apple.com/">Apple</a> in case SF's CVS went down.  Solutions to how to deal with this problem have come up.</p>
<p>One specific problem that people are trying to solve is the poor anonymous pserver access.  SF has their CVS servers set up so that authorized CVS commands take priority over anonymous ones and thus  when there is heavy traffic anonymous CVS basically shuts down.  Martin v. Löwis put up a link to a nightly tarball at <a class="reference" href="http://www.dcl.hpi.uni-potsdam.de/home/loewis/python.tgz">http://www.dcl.hpi.uni-potsdam.de/home/loewis/python.tgz</a> of the CVS HEAD.  perl.org has provided a nightly tarball as well at <a class="reference" href="http://cvs.perl.org/snapshots/python/">http://cvs.perl.org/snapshots/python/</a> for quite some time now.  The suggestion of having a read-only version of the CVS tree on python.org was came up, but how to properly do it and who would set it up was not settled.</p>
<p>And of course there is always the option of moving CVS off of SF entirely.  There is one offer on the table with the caveat that we need to know what kind of bandwidth demands we would have.  Another offer sprung up this month from Michal Wallace to host our CVS at <a class="reference" href="http://www.versionhost.com/">http://www.versionhost.com/</a> with the hitch that it requires an external Python script for secure connections (as specified at <a class="reference" href="http://www.sabren.net/code/cvssh/">http://www.sabren.net/code/cvssh/</a> ).</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036699.html">alternate pserver access for python CVS?</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036708.html">[fwd] SourceForge status</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036860.html">Volunteering to help with pserver cvs on python.org</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="which-license-to-use">
<h2><a class="toc-backref" href="#id45" name="which-license-to-use">Which License to Use?</a></h2>
<p>Domenico Andreoli wanted to donate <a class="reference" href="http://savannah.nongnu.org/projects/python-crack">python-crack</a> to the <a class="reference" href="http://www.python.org/psf/">PSF</a> and wondered what steps would be necessary to do so.  He was first told that the module would not be included in Python since it is too specific.  Secondly, it was suggested he not choose the PSF license.  Instead, he was told that he should use the BSD or MIT license (both of which can be found at <a class="reference" href="http://www.opensource.org/licenses/index.php">http://www.opensource.org/licenses/index.php</a>); clean, simple licenses that are not viral like the GPL but are GPL-compatible.  This is so that it can be included in any software that uses Python.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036712.html">donating python-crack module</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="not-quite-ansi-c">
<h2><a class="toc-backref" href="#id46" name="not-quite-ansi-c">Not Quite ANSI C</a></h2>
<p>Every so often someone runs Python against a C code checker and notices failures that get reported to us.  Often, though, we have to tell the person that we already know of the failures and that there is nothing to worry about.  This time it was failures under Purify.  We have also received reports of failures under <a class="reference" href="http://developer.kde.org/~sewardj/">Valgrind</a> which are spurious.  The language isn't even fully ANSI C compliant, but as Tim Peters said, &quot;it's not possible to write a useful and portable memory allocator in 100% standard ANSI C&quot; among other reasons why strict ANSI C conformity is broken.  The only major violations in the code are casting a pointer to a unsigned integer type and assuming &quot;that whatever memory protection gimmicks an OS implements are at page granularity&quot; which is a minor sin at best.  There is also some cases of accessing memory without proper casting.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036717.html">Invalid memory read in PyObject_Free</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036898.html">strict aliasing and Python</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="shadowing-built-ins-is-becoming-a-no-no">
<h2><a class="toc-backref" href="#id47" name="shadowing-built-ins-is-becoming-a-no-no">Shadowing Built-ins is Becoming a No-No</a></h2>
<p>Before the code was removed, Python 2.3 raised a DeprectionWarning when you overshadowed a built-in in a module from outside the module's actual code.  What this means is that doing something like:</p>
<pre class="literal-block">
import mod
mod.reload = 42
</pre>
<p>would raise the warning.  Now doing <tt class="literal"><span class="pre">reload</span> <span class="pre">=</span> <span class="pre">42</span></tt> in the module itself would still be allowed.  The idea was (and still is) that the compiler can know when a built-in is shadowed in a module when it compiles the module's code.  But allowing someone to overwrite a built-in externally means that the compiler cannot make any assumptions that built-ins will forever reference the actual built-in code.  This is unfortunate since if shadowing externally was made illegal the compiler can reference the built-in code directly and skip some steps for a nice speed-up.</p>
<p>This is why there was code to warn against this initially.  But it didn't work well enough to be left in Python 2.3 so it has been removed.  But this restriction will most likely be enforced at some point so it is something to keep in mind.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036767.html">Deprecation warning 'assignment shadows builtin'</a>...</li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036879.html">DeprecationWarning: assignment shadows builtin</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="must-start-faster">
<h2><a class="toc-backref" href="#id48" name="must-start-faster">Must...Start...Faster...</a></h2>
<p>While Python 2.3 sees up to a 30% speed increase over 2.2, it still starts up slower.  Originally it was believed that it was because of the importation of the re module.  Marc-André Lemburg applied a patch that tried to minimize its possible importation at startup but it was still slow.</p>
<p>Jeremy Hylton pointed out that 2.2.3 imported re so that probably was not the problem.  One thing that is different, though, is the automatic inclusion of warnings, codecs, and the ability to do zip imports.  These three things pull more modules and all of this leads to a longer startup time.  There is also the importation of distutils thanks to the site.py module, but that only occurs if you execute in a build directory.</p>
<p>Including zip imports also got attacked for  the number of failed checks for files it can incur.  But it is believed this is not as bad as all of the extra imports being done now and Just van Rossum said he would try to cut down the unneeded checks in the future.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036815.html">2.3 startup speed?</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="the-world-and-numbers">
<h2><a class="toc-backref" href="#id49" name="the-world-and-numbers">The World and Numbers</a></h2>
<p>People might not be aware of it, but locale.setlocale never changes the LC_NUMERIC locale value.  This is so that 'str' and 'float' can return and receive numbers in a consistent way in source code.  This causes a problem, though, for people in locales that do not use a period for a decimal point.  If you had your locale set to Brazilian and tried to pass the string &quot;3,14&quot; to 'float' it would fail even though that is a legitimate number representation for your locale.</p>
<p>The suggestion became to have a locale-agnostic version of 'str' and 'float' in the locale module for people to use when they needed such functionality.  It has now reached the stage of a rough draft PEP as found at <a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036996.html">http://mail.python.org/pipermail/python-dev/2003-July/036996.html</a> .</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036869.html">LC_NUMERIC and C libraries</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/036996.html">Be Honest about LC_NUMERIC</a></li>
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037178.html">RE: [Spambayes] Question (or possibly a bug report)</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="zippin-nothin">
<h2><a class="toc-backref" href="#id50" name="zippin-nothin">Zippin' Nothin'</a></h2>
<p>The built-in 'zip' function in Python 2.3 raises TypeError when given no arguments.  This causes problem when you do <tt class="literal"><span class="pre">zip(*args)</span></tt> and args is empty.  So for Python 2.4 'zip' with no arguments will return an empty list.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037332.html">zip() in Py2.4</a></li>
</ul>
</dd>
</dl>
</div>
<div class="section" id="a-syntax-for-function-attributes">
<h2><a class="toc-backref" href="#id51" name="a-syntax-for-function-attributes">A Syntax For Function Attributes</a></h2>
<p>An old debate (or at least old in terms of it having popped up multiple times during the tenure of your author) has been ways of enhancing function definitions.  Previously it has been over ways to make defining classmethod and its ilk in a cleaner fashion along with properties (past summaries on this can be found at <a class="reference" href="http://www.python.org/dev/summary/2003-01-16_2003-01-31.html#extended-function-syntax">http://www.python.org/dev/summary/2003-01-16_2003-01-31.html#extended-function-syntax</a> and <a class="reference" href="http://www.python.org/dev/summary/2003-02-01_2003-02-15.html#extended-function-syntax">http://www.python.org/dev/summary/2003-02-01_2003-02-15.html#extended-function-syntax</a> ).</p>
<p>What made the discussion slightly different this time, though, was the focus was on function attributes specifically.  One idea was to tweak Michael Hudson's bracket syntax for method annnotations to allow for function attributes; <tt class="literal"><span class="pre">def</span> <span class="pre">foo()</span> <span class="pre">[bar=42]:</span> <span class="pre">pass</span></tt>.  Another suggestion was to take the dictionary-like connection even farther; <tt class="literal"><span class="pre">def</span> <span class="pre">foo()</span> <span class="pre">{bar=42}:</span> <span class="pre">pass</span></tt>.  There was no clear winner in either case partially because this discussion flared up towards the end of the month.</p>
<p>It was also pointed out that using Michael Hudson's method descriptors you could come up with a wrapping function that handled the situation:</p>
<pre class="literal-block">
def attrs(**kw):
    def _(func):
        for k in kw:
            setattr(func, k, kw[k])
        return func
    return _

def foo() [attrs(bar=42)]: pass
</pre>
<p>Perk of this is it does not lead to any special syntax just for function attributes.  One drawback, though, as pointed out by Paul Moore is that this makes the method annotation idea a little to liberal and open to hackish solutions like this that will lead to abuse.  This was not a huge worry, though, since almost anything can be abused and this is all already doable now, just without a nice, clean syntax.</p>
<dl>
<dt>Contributing threads:</dt>
<dd><ul class="first last simple">
<li><a class="reference" href="http://mail.python.org/pipermail/python-dev/2003-July/037338.html">A syntax for function attributes?</a></li>
</ul>
</dd>
</dl>
</div>
</div>
</div>
<hr class="footer"/>
<div class="footer">
<a class="reference" href="2003-07-01_2003-07-31.txt">View document source</a>.
Generated on: 2003-08-09 21:16 UTC.
Generated by <a class="reference" href="http://docutils.sourceforge.net/">Docutils</a> from <a class="reference" href="http://docutils.sourceforge.net/rst.html">reStructuredText</a> source.
</div>

