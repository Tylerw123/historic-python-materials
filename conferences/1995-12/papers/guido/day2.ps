%!PS-Adobe-3.0
%%Title: (Day Two - Objects)
%%Creator: (Microsoft PowerPoint: PSPrinter 8.2.1)
%%CreationDate: (11:21 AM Monday, December 11, 1995)
%%For: ()
%%Pages: 32
%%DocumentFonts: Palatino-Bold Symbol Palatino-Roman Palatino-Italic Courier-Bold Courier
%%DocumentNeededFonts: Palatino-Bold Symbol Palatino-Roman Palatino-Italic Courier-Bold Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Landscape
%%DocumentMedia: Default 791.76 611.76 0 () ()
%ADO_ImageableArea: 10.8 12 781.68 600.96
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(Day Two - Objects)def
/Creator(Microsoft PowerPoint: PSPrinter 8.2.1)def
/CreationDate(11:21 AM Monday, December 11, 1995)def
/For()def
/Pages 1 def
end def end
/md 188 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1994 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1994 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1994 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1994 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1994 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
statusdict /manualfeed false put
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageSize Letter
statusdict /lettertray get exec
%%EndFeature
}featurecleanup
()setjob
countdictstack[{/currentdistillerparams where{pop 1 dict dup/Orientation 1 put setpagedevice}if}featurecleanup
/mT 90 $m rotate[.24 0 0 -.24 600.936 780.928]matrix concatmatrix def/por F def
[1 0 0 1 0 0]mT exch mT concatmatrix pop
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Palatino-Bold
%%IncludeFont: Symbol
%%IncludeFont: Palatino-Roman
%%IncludeFont: Palatino-Italic
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier
/f0_1/Palatino-Bold
:mre
/f0_288 f0_1 288 scf
/f0_192 f0_1 192 scf
/f1_1/Symbol
:bsr
240/apple pd
:esr
/f1_192 f1_1 192 scf
/f1_160 f1_1 160 scf
/f2_1 f1_1
def
/f2_288 f2_1 288 scf
/f3_1/Palatino-Roman
:mre
/f3_192 f3_1 192 scf
/f3_160 f3_1 160 scf
/f4_1/Palatino-Italic
:mre
/f4_192 f4_1 192 scf
/f4_160 f4_1 160 scf
/f5_1 f1_1
:mi
/f5_160 f5_1 160 scf
/f6_1/Courier-Bold
:mre
/f6_192 f6_1 192 scf
/f6_160 f6_1 160 scf
/f7_1/Courier
:mre
/f7_160 f7_1 160 scf
/f7_144 f7_1 144 scf
/f7_96 f7_1 96 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(; page: 1 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
gS
.521 .521 scale
1735.748 1006.119 :M
f0_192 sf
(3rd Python Workshop Tutorial)S
gR
gS
.521 .521 scale
816.032 1670.465 :M
f0_288 sf
(Extending and Embedding Python)S
gR
gS
.521 .521 scale
1194.287 2361.692 :M
f0_288 sf
(Day Two \320 Defining Objects)S
gR
gS
.521 .521 scale
2240.728 2966.516 :M
f0_192 sf
(Guido van Rossum)S
gR
gS
.521 .521 scale
1758.789 3542.538 :M
f6_192 sf
(guido@CNRI.Reston.Va.US)S
gR
gS
.521 .521 scale
1873.993 3772.947 :M
f6_192 sf
(http://www.python.org)S
gR
6.5 2.5 3199 2449 rS
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(; page: 2 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1710.787 840.993 :M
f0_288 sf
(Day Two - Overview)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Defining new Python objects in C)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Using "Modulator" to generate extension templates)S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2657.384 :M
f3_192 sf
(Using "BGEN" to generate complete extensions)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(; page: 3 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
768.03 840.993 :M
f0_288 sf
(Defining New Python Objects In C)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(object structure)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(type object)S
gR
gS
.521 .521 scale
693.147 2198.486 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2198.486 :M
f3_192 sf
(allocation)S
gR
gS
.521 .521 scale
693.147 2473.057 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2473.057 :M
f3_192 sf
(deallocation)S
gR
gS
.521 .521 scale
693.147 2749.547 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2749.547 :M
f3_192 sf
(special operations)S
gR
gS
.521 .521 scale
693.147 3026.038 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3026.038 :M
f3_192 sf
(methods)S
gR
gS
.521 .521 scale
693.147 3302.529 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3302.529 :M
f3_192 sf
(instance variables)S
gR
gS
.521 .521 scale
693.147 3577.1 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3577.1 :M
f3_192 sf
(making a numeric type)S
gR
gS
.521 .521 scale
693.147 3853.591 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3853.591 :M
f3_192 sf
(making a sequence type)S
gR
gS
.521 .521 scale
693.147 4130.081 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 4130.081 :M
f3_192 sf
(making a mapping type)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(; page: 4 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1998.798 840.993 :M
f0_288 sf
(Object Structure)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Each object type has its own struct definition)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Struct starts with required boilerplate:)S
gR
gS
.521 .521 scale
910.116 2123.603 :M
f6_160 sf
-.009(typedef struct {)A
gR
gS
.521 .521 scale
910.116 2315.61 :M
f6_160 sf
-.009(    PyObject_HEAD)A
gR
gS
.521 .521 scale
910.116 2507.618 :M
f6_160 sf
-.009(    <your struct members here>)A
gR
gS
.521 .521 scale
910.116 2699.625 :M
f6_160 sf
-.01(} YourObject;)A
gR
gS
.521 .521 scale
693.147 2966.516 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2966.516 :M
f3_192 sf
(Macro )S
gR
gS
.521 .521 scale
1501.499 2966.516 :M
f6_192 sf
(PyObject_Head)S
gR
gS
.521 .521 scale
2989.557 2966.516 :M
f3_192 sf
( expands to:)S
gR
gS
.521 .521 scale
910.116 3166.204 :M
f6_160 sf
-.009(    int ob_refcount;)A
gR
gS
.521 .521 scale
910.116 3358.211 :M
f6_160 sf
-.009(    struct _typeobject *ob_type;)A
gR
gS
.521 .521 scale
693.147 3625.102 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3625.102 :M
f3_192 sf
(\(More if you have certain debugging flags on\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(; page: 5 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2271.449 840.993 :M
f0_288 sf
(Type Object)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Statically initialized structure)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Similar to C++ virtual function vector)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f3_160 sf
(contains pointers to functions that implement behavior)S
gR
gS
.521 .521 scale
1269.17 2390.493 :M
f3_160 sf
<C8>S
gR
gS
.521 .521 scale
1413.175 2390.493 :M
f3_160 sf
(e.g. deallocation,  )S
f6_160 sf
(print, getattr\(\), cmp\(\))S
gR
gS
.521 .521 scale
981.158 2620.902 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2620.902 :M
f3_160 sf
(also contains some strings, e.g. type name and doc string)S
gR
gS
.521 .521 scale
693.147 2887.793 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2887.793 :M
f3_192 sf
(Also doubles as a Python-accessible object)S
gR
gS
.521 .521 scale
981.158 3127.802 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3127.802 :M
f6_160 sf
-.01(type\(x\))A
gR
gS
.521 .521 scale
1827.911 3127.802 :M
f3_160 sf
( returns the type object for object )S
f6_160 sf
(x)S
gR
gS
.521 .521 scale
981.158 3356.291 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3356.291 :M
f3_160 sf
(mostly usable for comparing types)S
gR
gS
.521 .521 scale
693.147 3623.182 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3623.182 :M
f3_192 sf
(Construction function is )S
f4_192 sf
(not)S
gR
gS
.521 .521 scale
3266.048 3623.182 :M
f3_192 sf
( included in type object)S
gR
gS
.521 .521 scale
981.158 3863.191 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3863.191 :M
f3_160 sf
(reason: arguments to constructor differ per type)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(; page: 6 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2394.334 840.993 :M
f0_288 sf
(Allocation)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Your module must provide an interface for allocation)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Usually this is exported to Python as a function, e.g.)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f3_160 sf
(open_socket\(\))S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(create_window\(\))S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2657.384 :M
f3_192 sf
(Can also be a method of another object, e.g.)S
gR
gS
.521 .521 scale
981.158 2897.393 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2897.393 :M
f3_160 sf
(window.create_menu\(\))S
gR
gS
.521 .521 scale
981.158 3127.802 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3127.802 :M
f3_160 sf
(socket.accept\(\))S
gR
gS
.521 .521 scale
693.147 3394.693 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3394.693 :M
f3_192 sf
(Responsibilities:)S
gR
gS
.521 .521 scale
981.158 3632.782 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3632.782 :M
f3_160 sf
(allocate memory)S
gR
gS
.521 .521 scale
981.158 3863.191 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3863.191 :M
f3_160 sf
(initialize all fields)S
gR
gS
.521 .521 scale
693.147 4130.081 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 4130.081 :M
f3_192 sf
(May raise exception if allocation fails)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(; page: 7 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2242.648 840.993 :M
f0_288 sf
(Deallocation)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Deallocator is a function pointer in the type object)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Implicitly called when reference count reaches zero)S
gR
gS
.521 .521 scale
693.147 2198.486 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2198.486 :M
f3_192 sf
(MUST NOT RAISE AN EXCEPTION)S
gR
gS
.521 .521 scale
693.147 2703.466 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2703.466 :M
f3_192 sf
(Deallocation method must match allocation method)S
gR
gS
.521 .521 scale
981.158 2943.475 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2943.475 :M
f3_160 sf
(usually malloc/free)S
gR
gS
.521 .521 scale
981.158 3173.884 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3173.884 :M
f3_160 sf
(other allocation styles may be used)S
gR
gS
.521 .521 scale
1269.17 3402.373 :M
f3_160 sf
<C8>S
gR
gS
.521 .521 scale
1413.175 3402.373 :M
f3_160 sf
(e.g. integers have their own free list \(saves )S
cF
f1_160 sf
<B3>S
sf
(4 bytes/obj\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(; page: 8 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1831.752 840.993 :M
f0_288 sf
(Special Operations)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Functions defining type-specific behavior)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(All optional; if NULL pointer:)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f3_160 sf
(either system default \(e.g. cmp\(\), repr\(\)\))S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(or "operation not defined" exception \(e.g. getattr\(\), setattr\(\)\))S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2657.384 :M
f3_192 sf
(Each has its own prototype)S
gR
gS
.521 .521 scale
981.158 2897.393 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2897.393 :M
f3_160 sf
(first argument is always an object )S
f4_160 sf
(of this type)S
gR
gS
.521 .521 scale
1269.17 3127.802 :M
f3_160 sf
<C8>S
gR
gS
.521 .521 scale
1413.175 3127.802 :M
f3_160 sf
(may need cast to convert it but no run-time check)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(; page: 9 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2499.938 840.993 :M
f0_288 sf
(Methods)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Used to implement behavior unique to a type, e.g.:)S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f6_160 sf
-.009(list.append\(\), window.resize\(\), file.read\(\))A
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Methods are not contained directly in the type object)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(\(historical mistake: doc strings are unreachable\))S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2657.384 :M
f3_192 sf
(Use getattr\(\) boilerplate:)S
gR
gS
.521 .521 scale
910.116 2897.393 :M
f6_160 sf
-.009(static PyObject *)A
gR
gS
.521 .521 scale
910.116 3089.401 :M
f6_160 sf
-.009(GetAttr\(PyObject *self, char *name\) {)A
gR
gS
.521 .521 scale
910.116 3281.408 :M
f6_160 sf
-.009(    return Py_FindMethod\(methods, self, name\);)A
gR
gS
.521 .521 scale
910.116 3473.416 :M
f6_160 sf
(})S
gR
gS
.521 .521 scale
693.147 3740.306 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3740.306 :M
f3_192 sf
(Here, )S
f6_192 sf
(methods)S
gR
gS
.521 .521 scale
2225.367 3740.306 :M
f3_192 sf
( is a method table like before)S
gR
gS
.521 .521 scale
981.158 3978.395 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3978.395 :M
f3_160 sf
(but now, )S
f6_160 sf
(self)S
f3_160 sf
( passed into implementation is non-NULL)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(; page: 10 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1862.473 840.993 :M
f0_288 sf
(Instance Variables)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Accessed through getattr/setattr behaviors)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(You get to choose how they are stored, e.g.:)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f3_160 sf
(in a Python dictionary \(flexible, but harder to access from C\))S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(as struct members of your own object)S
gR
gS
.521 .521 scale
981.158 2620.902 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2620.902 :M
f3_160 sf
(as computed values)S
gR
gS
.521 .521 scale
693.147 2887.793 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2887.793 :M
f3_192 sf
(Standard support exists for "struct members" version:)S
gR
gS
.521 .521 scale
981.158 3127.802 :M
f6_160 sf
-.009(#include "structmember.h")A
gR
gS
.521 .521 scale
981.158 3356.291 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3356.291 :M
f3_160 sf
(define a table mapping names to type and offset)S
gR
gS
.521 .521 scale
981.158 3586.7 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3586.7 :M
f3_160 sf
(call PyMember_Get\(\) in your getattr\(\) behavior routine)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(; page: 11 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1470.777 840.993 :M
f0_288 sf
(Making a Numeric Type)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Type object contains optional pointer to )S
gR
gS
.521 .521 scale
910.116 1875.913 :M
f6_192 sf
(PyNumberMethods )S
f3_192 sf
(structure)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Contains lots of function pointers to implement)S
gR
gS
.521 .521 scale
910.116 2382.813 :M
f3_192 sf
(add, mul, sub, div, mod, etc.)S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2657.384 :M
f3_192 sf
(These function pointers can't be NULL)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(; page: 12 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1415.095 840.993 :M
f0_288 sf
(Making a Sequence Type)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Similar to making a numeric type:)S
gR
gS
.521 .521 scale
910.116 1875.913 :M
f3_192 sf
( )S
f6_192 sf
(PySequenceMethods )S
gR
gS
.521 .521 scale
3020.278 1875.913 :M
f3_192 sf
(structure)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Implement functions:)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(len\(\), getitem\(\), getslice\(\))S
gR
gS
.521 .521 scale
981.158 2620.902 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2620.902 :M
f3_160 sf
(concat\(\), repeat\(\))S
gR
gS
.521 .521 scale
981.158 2851.311 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2851.311 :M
f3_160 sf
(setitem\(\), setslice\(\))S
gR
gS
.521 .521 scale
693.147 3118.202 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3118.202 :M
f3_192 sf
(The assignment function pointers may be NULL)S
gR
gS
.521 .521 scale
981.158 3356.291 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3356.291 :M
f3_160 sf
(to implement immutable sequences \(e.g. tuples\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(; page: 13 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1440.056 840.993 :M
f0_288 sf
(Making a Mapping Type)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Similar to sequence type :)S
gR
gS
.521 .521 scale
910.116 1875.913 :M
f3_192 sf
( )S
f6_192 sf
(PyMappingMethods )S
gR
gS
.521 .521 scale
2908.914 1875.913 :M
f3_192 sf
(structure)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Even simpler set of functions:)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(len\(\))S
gR
gS
.521 .521 scale
981.158 2620.902 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2620.902 :M
f3_160 sf
(getitem\(\))S
gR
gS
.521 .521 scale
981.158 2851.311 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2851.311 :M
f3_160 sf
(setitem\(\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(; page: 14 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1835.592 840.993 :M
f0_288 sf
(Using "Modulator")S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Interactive tool to generate "boilerplate" code)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(You enter module name and function names)S
gR
gS
.521 .521 scale
693.147 2198.486 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2198.486 :M
f3_192 sf
(Modulators generates the C code for you)S
gR
gS
.521 .521 scale
981.158 2436.575 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2436.575 :M
f3_160 sf
(You have to edit the generated C file to add semantics)S
gR
gS
.521 .521 scale
693.147 2703.466 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2703.466 :M
f3_192 sf
(Modulator is a one-shot tool)S
gR
gS
.521 .521 scale
981.158 2943.475 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2943.475 :M
f3_160 sf
(it can't save the data you entered and continue later)S
gR
gS
.521 .521 scale
981.158 3173.884 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3173.884 :M
f3_160 sf
(but it saves you lots of typing for the boilerplate)S
gR
gS
.521 .521 scale
693.147 3440.774 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3440.774 :M
f3_192 sf
(Modulator also generates object definition boilerplate)S
gR
gS
.521 .521 scale
693.147 3945.754 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3945.754 :M
f3_192 sf
(Beware: it's not a good tool for learning!)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(; page: 15 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2682.345 840.993 :M
f0_288 sf
(Demo)S
gR
gS
.521 .521 scale
693.147 2653.544 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2653.544 :M
f3_192 sf
(Insert interactive demo of Modulator here)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(; page: 16 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1344.053 840.993 :M
f0_288 sf
(BGEN: Beyond Modulator)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(BGEN generates more than boilerplate)S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f3_160 sf
(Generates complete extension modules)S
gR
gS
.521 .521 scale
981.158 2114.003 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2114.003 :M
f3_160 sf
(Knows about standard C types)S
gR
gS
.521 .521 scale
981.158 2344.412 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2344.412 :M
f3_160 sf
(Can be taught about other types \(and how to map them\))S
gR
gS
.521 .521 scale
693.147 2611.302 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2611.302 :M
f3_192 sf
(BGEN can scan header files)S
gR
gS
.521 .521 scale
981.158 2851.311 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2851.311 :M
f3_160 sf
(Turns function prototypes into wrappers)S
gR
gS
.521 .521 scale
981.158 3081.72 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3081.72 :M
f3_160 sf
(Customization possible \(and necessary\))S
gR
gS
.521 .521 scale
693.147 3348.611 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3348.611 :M
f3_192 sf
(BGEN regenerates when you change its input)S
gR
gS
.521 .521 scale
693.147 3623.182 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3623.182 :M
f3_192 sf
(Alas, harder to use)S
gR
gS
.521 .521 scale
981.158 3863.191 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3863.191 :M
f3_160 sf
(no documentation yet)S
gR
gS
.521 .521 scale
981.158 4093.6 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 4093.6 :M
f3_160 sf
(not finished yet)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(; page: 17 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1858.633 840.993 :M
f0_288 sf
(BGEN Run Phases)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
(1.)S
gR
gS
.521 .521 scale
908.195 1645.504 :M
f3_192 sf
(Scan header file)S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f3_160 sf
(generating Python script file)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
(2. Import the generated script)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(creating function description objects)S
gR
gS
.521 .521 scale
693.147 2657.384 :M
f3_192 sf
(3. Generate code)S
gR
gS
.521 .521 scale
981.158 2897.393 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2897.393 :M
f3_160 sf
(generating C module file)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 18 18
%%BeginPageSetup
initializepage
(; page: 18 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1783.75 840.993 :M
f0_288 sf
(BGEN Components)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Header file scanner \(needs customization\))S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f3_160 sf
(Generates a Python module read by the next phase)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Exception specifications \(pure customization\))S
gR
gS
.521 .521 scale
693.147 2428.895 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2428.895 :M
f3_192 sf
(Type definitions \(customizable\))S
gR
gS
.521 .521 scale
693.147 2703.466 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2703.466 :M
f3_192 sf
(Control module \(ought to be generic\))S
gR
gS
.521 .521 scale
693.147 2979.956 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2979.956 :M
f3_192 sf
(Generator \(generic\))S
gR
gS
.521 .521 scale
693.147 3256.447 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3256.447 :M
f3_192 sf
(Support modules \(generic\))S
gR
gS
.521 .521 scale
981.158 3494.536 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3494.536 :M
f3_160 sf
(standard types)S
gR
gS
.521 .521 scale
981.158 3724.946 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3724.946 :M
f3_160 sf
(standard buffer types)S
gR
gS
.521 .521 scale
981.158 3955.355 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3955.355 :M
f3_160 sf
(mac specific types)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 19 19
%%BeginPageSetup
initializepage
(; page: 19 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1382.454 668.186 :M
f0_288 sf
(Sample Header File Input)S
gR
gS
.521 .521 scale
2474.977 1013.8 :M
f0_288 sf
("demo.h")S
gR
gS
.521 .521 scale
693.147 1603.263 :M
f7_144 sf
(/* Sample header file -- input to demoscan.py */)S
gR
gS
.521 .521 scale
693.147 2017.999 :M
f7_144 sf
(#include <stdio.h>)S
gR
gS
.521 .521 scale
693.147 2434.655 :M
f7_144 sf
(#define FILEptr FILE *)S
gR
gS
.521 .521 scale
693.147 2851.311 :M
f7_144 sf
(/* A function we can handle */)S
gR
gS
.521 .521 scale
693.147 3058.679 :M
f7_144 sf
(extern int system\(const char *command\);)S
gR
gS
.521 .521 scale
693.147 3475.336 :M
f7_144 sf
(/* A function we can't handle yet */)S
gR
gS
.521 .521 scale
693.147 3682.704 :M
f7_144 sf
(extern FILEptr popen\(const char *command,)S
gR
gS
.521 .521 scale
693.147 3890.072 :M
f7_144 sf
(                     const char *mode\);)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 20 20
%%BeginPageSetup
initializepage
(; page: 20 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1434.296 668.186 :M
f0_288 sf
(Sample Generated Script )S
gR
gS
.521 .521 scale
2154.324 1013.8 :M
f0_288 sf
("demogen.py")S
gR
gS
.521 .521 scale
693.147 1603.263 :M
f7_144 sf
(# Generated from 'demo.h')S
gR
gS
.521 .521 scale
693.147 2017.999 :M
f7_144 sf
(f = Function\(int, 'system',)S
gR
gS
.521 .521 scale
693.147 2227.287 :M
f7_144 sf
(    \(stringptr, 'command', InMode\),)S
gR
gS
.521 .521 scale
693.147 2434.655 :M
f7_144 sf
<29>S
gR
gS
.521 .521 scale
693.147 2642.023 :M
f7_144 sf
(functions.append\(f\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 21 21
%%BeginPageSetup
initializepage
(; page: 21 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1491.898 668.186 :M
f0_288 sf
(Sample Control Module)S
gR
gS
.521 .521 scale
2106.322 1013.8 :M
f0_288 sf
("demoscan.py")S
gR
gS
.521 .521 scale
693.147 1603.263 :M
f7_144 sf
(from scantools import Scanner)S
gR
gS
.521 .521 scale
693.147 2017.999 :M
f7_144 sf
(def main\(\):)S
gR
gS
.521 .521 scale
910.116 2227.287 :M
f7_144 sf
(scanner = MyScanner\("demo.h",)S
gR
gS
.521 .521 scale
693.147 2434.655 :M
f7_144 sf
(                       "demogen.h", "demodefs.py"\))S
gR
gS
.521 .521 scale
910.116 2642.023 :M
f7_144 sf
(scanner.scan\(\))S
gR
gS
.521 .521 scale
910.116 2851.311 :M
f7_144 sf
(scanner.close\(\))S
gR
gS
.521 .521 scale
910.116 3058.679 :M
f7_144 sf
(import demosupport)S
gR
gS
.521 .521 scale
693.147 3475.336 :M
f7_144 sf
(class MyScanner\(Scanner\): ...see next page...)S
gR
gS
.521 .521 scale
693.147 3890.072 :M
f7_144 sf
(main\(\))S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 22 22
%%BeginPageSetup
initializepage
(; page: 22 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1491.898 668.186 :M
f0_288 sf
(Sample Control Module)S
gR
gS
.521 .521 scale
1574.462 1013.8 :M
f0_288 sf
("demoscan.py" \(cont'd\))S
gR
gS
.521 .521 scale
693.147 1559.101 :M
f7_96 sf
(class MyScanner\(Scanner\):)S
gR
gS
.521 .521 scale
910.116 1835.592 :M
f7_96 sf
(def initpatterns\(self\):)S
gR
gS
.521 .521 scale
1271.09 1973.837 :M
f7_96 sf
(Scanner.initpatterns\(self\))S
gR
gS
.521 .521 scale
1271.09 2110.162 :M
f7_96 sf
(self.head_pat = "^extern ")S
gR
gS
.521 .521 scale
1271.09 2248.408 :M
f7_96 sf
(self.tail_pat = ";")S
gR
gS
.521 .521 scale
1271.09 2386.653 :M
f7_96 sf
(self.type_pat = "extern[ \\t\\n]+\\\(<type>[a-zA-Z0-9_ \\t]*[a-zA-Z0-9_]\\\)[ \\t\\n]+")S
gR
gS
.521 .521 scale
1271.09 2524.899 :M
f7_96 sf
(self.whole_pat = self.type_pat + self.name_pat + self.args_pat)S
gR
gS
.521 .521 scale
910.116 2801.389 :M
f7_96 sf
(def makeblacklisttypes\(self\):)S
gR
gS
.521 .521 scale
1271.09 2939.635 :M
f7_96 sf
(return ["FILEptr"])S
gR
gS
.521 .521 scale
910.116 3214.206 :M
f7_96 sf
(def makerepairinstructions\(self\):)S
gR
gS
.521 .521 scale
1271.09 3352.451 :M
f7_96 sf
(return [)S
gR
gS
.521 .521 scale
1847.112 3490.696 :M
f7_96 sf
(\([\('char_ptr', '*', 'InMode'\)], [\('stringptr', '*', '*'\)]\),)S
gR
gS
.521 .521 scale
1847.112 3628.942 :M
f7_96 sf
(])S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 23 23
%%BeginPageSetup
initializepage
(; page: 23 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1178.926 668.186 :M
f0_288 sf
(Sample Generated Extension)S
gR
gS
.521 .521 scale
1994.958 1013.8 :M
f0_288 sf
("demomodule.c")S
gR
gS
.521 .521 scale
693.147 1559.101 :M
f7_96 sf
(#include "Python.h")S
gR
gS
.521 .521 scale
693.147 1697.346 :M
f7_96 sf
(#include "demo.h")S
gR
gS
.521 .521 scale
693.147 1973.837 :M
f7_96 sf
(static PyObject *demo_Error;)S
gR
gS
.521 .521 scale
693.147 2248.408 :M
f7_96 sf
(static PyObject *demo_system\(_self, _args\))S
gR
gS
.521 .521 scale
910.116 2386.653 :M
f7_96 sf
(PyObject *_self;)S
gR
gS
.521 .521 scale
910.116 2524.899 :M
f7_96 sf
(PyObject *_args;)S
gR
gS
.521 .521 scale
693.147 2663.144 :M
f7_96 sf
({)S
gR
gS
.521 .521 scale
910.116 2801.389 :M
f7_96 sf
(PyObject *_res = NULL;)S
gR
gS
.521 .521 scale
910.116 2939.635 :M
f7_96 sf
(int _rv;)S
gR
gS
.521 .521 scale
910.116 3077.88 :M
f7_96 sf
(char* command;)S
gR
gS
.521 .521 scale
910.116 3214.206 :M
f7_96 sf
(if \(!PyArg_ParseTuple\(_args, "s",)S
gR
gS
.521 .521 scale
910.116 3352.451 :M
f7_96 sf
(                      &command\)\))S
gR
gS
.521 .521 scale
1271.09 3490.696 :M
f7_96 sf
(return NULL;)S
gR
gS
.521 .521 scale
910.116 3628.942 :M
f7_96 sf
(_rv = system\(command\);)S
gR
gS
.521 .521 scale
910.116 3767.187 :M
f7_96 sf
(_res = Py_BuildValue\("i",)S
gR
gS
.521 .521 scale
910.116 3905.433 :M
f7_96 sf
(                     _rv\);)S
gR
gS
.521 .521 scale
910.116 4043.678 :M
f7_96 sf
(return _res;)S
gR
gS
.521 .521 scale
693.147 4181.923 :M
f7_96 sf
(})S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 24 24
%%BeginPageSetup
initializepage
(; page: 24 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1178.926 668.186 :M
f0_288 sf
(Sample Generated Extension)S
gR
gS
.521 .521 scale
1463.097 1013.8 :M
f0_288 sf
("demomodule.c" \(cont'd\))S
gR
gS
.521 .521 scale
693.147 1559.101 :M
f7_96 sf
(static PyMethodDef demo_methods[] = {)S
gR
gS
.521 .521 scale
910.116 1697.346 :M
f7_96 sf
({"system", \(PyCFunction\)demo_system, 1,)S
gR
gS
.521 .521 scale
910.116 1835.592 :M
f7_96 sf
( "\(char* command\) -> \(int _rv\)"},)S
gR
gS
.521 .521 scale
910.116 1973.837 :M
f7_96 sf
({NULL, NULL, 0})S
gR
gS
.521 .521 scale
693.147 2110.162 :M
f7_96 sf
(};)S
gR
gS
.521 .521 scale
693.147 2386.653 :M
f7_96 sf
(void initdemo\(\))S
gR
gS
.521 .521 scale
693.147 2524.899 :M
f7_96 sf
({)S
gR
gS
.521 .521 scale
910.116 2663.144 :M
f7_96 sf
(PyObject *m;)S
gR
gS
.521 .521 scale
910.116 2801.389 :M
f7_96 sf
(PyObject *d;)S
gR
gS
.521 .521 scale
910.116 3077.88 :M
f7_96 sf
(m = Py_InitModule\("demo", demo_methods\);)S
gR
gS
.521 .521 scale
910.116 3214.206 :M
f7_96 sf
(d = PyModule_GetDict\(m\);)S
gR
gS
.521 .521 scale
910.116 3352.451 :M
f7_96 sf
(demo_Error = PyMac_GetOSErrException\(\);)S
gR
gS
.521 .521 scale
910.116 3490.696 :M
f7_96 sf
(if \(demo_Error == NULL ||)S
gR
gS
.521 .521 scale
910.116 3628.942 :M
f7_96 sf
(    PyDict_SetItemString\(d, "Error", demo_Error\) != 0\))S
gR
gS
.521 .521 scale
1271.09 3767.187 :M
f7_96 sf
(Py_FatalError\("can't initialize demo.Error"\);)S
gR
gS
.521 .521 scale
693.147 3905.433 :M
f7_96 sf
(})S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 25 25
%%BeginPageSetup
initializepage
(; page: 25 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
735.389 840.993 :M
f0_288 sf
(Guessing Argument Transfer Mode)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Arguments are classified as)S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f3_160 sf
(InMode \(input only argument\))S
gR
gS
.521 .521 scale
981.158 2114.003 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2114.003 :M
f3_160 sf
(OutMode \(output only argument\))S
gR
gS
.521 .521 scale
981.158 2344.412 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2344.412 :M
f3_160 sf
(InOutMode \(input and output argument\))S
gR
gS
.521 .521 scale
693.147 2803.31 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2803.31 :M
f3_192 sf
(Scanner employs heuristics, e.g.)S
gR
gS
.521 .521 scale
981.158 3043.319 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3043.319 :M
f3_160 sf
(arguments of type "const char *" are InMode)S
gR
gS
.521 .521 scale
981.158 3273.728 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3273.728 :M
f3_160 sf
(arguments whose name begins with "return_" are OutMode)S
gR
gS
.521 .521 scale
693.147 3732.626 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3732.626 :M
f3_192 sf
(Scanner needs help in most cases)S
gR
gS
.521 .521 scale
981.158 3970.715 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3970.715 :M
f3_160 sf
(every library has different conventions)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 26 26
%%BeginPageSetup
initializepage
(; page: 26 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2135.123 840.993 :M
f0_288 sf
(Return Values)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Output arguments are translated to a return tuple:)S
gR
gS
.521 .521 scale
981.158 1868.233 :M
f7_144 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1868.233 :M
f7_144 sf
(int func\(int a, int b, int *return_a, *return_b\))S
gR
gS
.521 .521 scale
1161.645 2054.48 :M
f3_160 sf
(is translated into )S
f7_144 sf
(func\(a, b\) -> \(x, a, b\))S
gR
gS
.521 .521 scale
981.158 2284.889 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2284.889 :M
f7_160 sf
-.009(void func\(int *return_a\))A
gR
gS
.521 .521 scale
1161.645 2476.897 :M
f3_160 sf
(is translated into )S
f7_160 sf
(func\(\) -> a)S
gR
gS
.521 .521 scale
693.147 2935.795 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2935.795 :M
f3_192 sf
(Input-output arguments are counted twice)S
gR
gS
.521 .521 scale
981.158 3175.804 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3175.804 :M
f3_160 sf
(once as input argument)S
gR
gS
.521 .521 scale
981.158 3404.293 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3404.293 :M
f3_160 sf
(once as output argument)S
gR
gS
.521 .521 scale
981.158 3634.702 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3634.702 :M
f7_160 sf
-.009(void func\(/*inout*/int *a\))A
gR
gS
.521 .521 scale
1161.645 3826.709 :M
f3_160 sf
(translates into )S
gR
gS
.521 .521 scale
2200.406 3826.709 :M
f7_160 sf
-.01(func\(a\) -> a)A
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 27 27
%%BeginPageSetup
initializepage
(; page: 27 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1434.296 840.993 :M
f0_288 sf
(Writing Type Generators)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Subclass of a BGEN-provided type generator class)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Override various methods that control generator, e.g.)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f3_160 sf
(how to declare an object of type X)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(how to convert from, to Python object)S
gR
gS
.521 .521 scale
1269.17 2620.902 :M
f3_160 sf
<C8>S
gR
gS
.521 .521 scale
1413.175 2620.902 :M
f3_160 sf
(using PyArg_ParseTuple\(\) and By_BuildValue\(\))S
gR
gS
.521 .521 scale
981.158 2851.311 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2851.311 :M
f3_160 sf
(how to pass as InMode, InOutMode, OutMode argument)S
gR
gS
.521 .521 scale
981.158 3081.72 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3081.72 :M
f3_160 sf
(optional clean-up or error handling)S
gR
gS
.521 .521 scale
693.147 3348.611 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3348.611 :M
f3_192 sf
(Can map single Python object to several C arguments)S
gR
gS
.521 .521 scale
981.158 3586.7 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3586.7 :M
f3_160 sf
(e.g. for variable-size buffers)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 28 28
%%BeginPageSetup
initializepage
(; page: 28 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1219.248 840.993 :M
f0_288 sf
(Handling Buffer Arguments)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Buffer handling is different in Python than in C)S
gR
gS
.521 .521 scale
693.147 1921.995 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1921.995 :M
f3_192 sf
(Example:)S
gR
gS
.521 .521 scale
981.158 2160.084 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2160.084 :M
f7_160 sf
-.009(read\(fd, buffer, buflen\) -> nbytes)A
gR
gS
.521 .521 scale
1161.645 2352.092 :M
f3_160 sf
(translates into Python as)S
gR
gS
.521 .521 scale
981.158 2582.501 :M
f7_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2582.501 :M
f7_160 sf
-.009(read\(fd, buflen\) -> string_of_length_nbytes)A
gR
gS
.521 .521 scale
693.147 2849.391 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2849.391 :M
f3_192 sf
(Many different conventions exist in C)S
gR
gS
.521 .521 scale
981.158 3089.401 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3089.401 :M
f3_160 sf
(implicit length; length variable with InOutMode; etc.)S
gR
gS
.521 .521 scale
693.147 3356.291 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3356.291 :M
f3_192 sf
(BGEN has generator classes for many schemes)S
gR
gS
.521 .521 scale
981.158 3594.38 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3594.38 :M
f3_160 sf
(or you can roll your own type generator)S
gR
gS
.521 .521 scale
693.147 3861.271 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3861.271 :M
f3_192 sf
(Scanner needs hints to recognize buffer schemes)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 29 29
%%BeginPageSetup
initializepage
(; page: 29 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2175.445 840.993 :M
f0_288 sf
("Blacklisting")S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
(The control module can "blacklist":)S
gR
gS
.521 .521 scale
693.147 2198.486 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2198.486 :M
f3_192 sf
(specific functions)S
gR
gS
.521 .521 scale
981.158 2436.575 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2436.575 :M
f3_160 sf
(for dangerous or unneeded functions)S
gR
gS
.521 .521 scale
693.147 2895.473 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2895.473 :M
f3_192 sf
(functions that receive or return specific types)S
gR
gS
.521 .521 scale
981.158 3135.482 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3135.482 :M
f3_160 sf
(for types that you don't know yet to handle)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 30 30
%%BeginPageSetup
initializepage
(; page: 30 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
1831.752 840.993 :M
f0_288 sf
(Advanced Features)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 1645.504 :M
f3_192 sf
(Error handling)S
gR
gS
.521 .521 scale
981.158 1885.514 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 1885.514 :M
f3_160 sf
(designate a particular output variable as the error indicator)S
gR
gS
.521 .521 scale
981.158 2114.003 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2114.003 :M
f3_160 sf
(specify error test \(could also test a global variable\))S
gR
gS
.521 .521 scale
981.158 2344.412 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2344.412 :M
f3_160 sf
(translates errors into exceptions)S
gR
gS
.521 .521 scale
981.158 2574.821 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2574.821 :M
f3_160 sf
(if no error, error variable can be ignored or returned)S
gR
gS
.521 .521 scale
693.147 3033.719 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3033.719 :M
f3_192 sf
(Facilities for object type definitions)S
gR
gS
.521 .521 scale
981.158 3273.728 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3273.728 :M
f3_160 sf
(generates the usual boilerplate \(typeobject initializer etc.\))S
gR
gS
.521 .521 scale
981.158 3502.217 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 3502.217 :M
f3_160 sf
(can be used by type generators)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 31 31
%%BeginPageSetup
initializepage
(; page: 31 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2459.616 840.993 :M
f0_288 sf
(Problems)S
gR
gS
.521 .521 scale
693.147 1645.504 :M
f3_192 sf
(Frankly, a lot:)S
gR
gS
.521 .521 scale
693.147 2152.404 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 2152.404 :M
f3_192 sf
(Customizing the header file scanner is a pain)S
gR
gS
.521 .521 scale
981.158 2390.493 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2390.493 :M
f3_160 sf
(Requires fairly consistent coding style in header files)S
gR
gS
.521 .521 scale
981.158 2620.902 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2620.902 :M
f3_160 sf
(Parameter transfer modes often guessed wrong)S
gR
gS
.521 .521 scale
981.158 2851.311 :M
f3_160 sf
<D0>S
gR
gS
.521 .521 scale
1161.645 2851.311 :M
f3_160 sf
(\(Alternative: write generator calls by hand; also painful\))S
gR
gS
.521 .521 scale
693.147 3118.202 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3118.202 :M
f3_192 sf
(Designing type generators is a black art)S
gR
gS
.521 .521 scale
693.147 3394.693 :M
f3_192 sf
<A5>S
gR
gS
.521 .521 scale
910.116 3394.693 :M
f3_192 sf
(No C++ support)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Page: 32 32
%%BeginPageSetup
initializepage
(; page: 32 of 32)setjob
%%EndPageSetup
gS 0 0 3212 2454 rC
106 102 3000 2250 rC
6.5 2.5 3199 2449 rS
4 lw
108 104 2996 506 rS
1 G
106 608 3000 17 rF
0 G
108 610 2996 13 rS
106 641 -4 4 3106 637 4 106 637 @a
gS
.521 .521 scale
2031.439 840.993 :M
f0_288 sf
(Any Questions?)S
gR
1 lw
6.5 2.5 3199 2449 rS
endp
%%Trailer
end
%%EOF
